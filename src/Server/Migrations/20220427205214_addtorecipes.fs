// <auto-generated />
namespace Server.Migrations

open System
open Microsoft.EntityFrameworkCore
open Microsoft.EntityFrameworkCore.Infrastructure
open Microsoft.EntityFrameworkCore.Metadata
open Microsoft.EntityFrameworkCore.Migrations
open Microsoft.EntityFrameworkCore.Storage.ValueConversion

[<DbContext(typeof<DbContext.ThisIsNotAContext>)>]
[<Migration("20220427205214_addtorecipes")>]
type addtorecipes() =
    inherit Migration()

    override this.Up(migrationBuilder:MigrationBuilder) =
        migrationBuilder.DropColumn(
            name = "Category"
            ,table = "Recipes"
            ) |> ignore

        migrationBuilder.CreateTable(
            name = "Categories"
            ,columns = (fun table -> 
            {|
                Id =
                    table.Column<Guid>(
                        nullable = false
                        ,``type`` = "TEXT"
                    )
                Name =
                    table.Column<string>(
                        nullable = false
                        ,``type`` = "TEXT"
                    )
                RecipeId =
                    table.Column<Guid>(
                        nullable = true
                        ,``type`` = "TEXT"
                    )
            |})
            , constraints =
                (fun table -> 
                    table.PrimaryKey("PK_Categories", (fun x -> (x.Id) :> obj)
                    ) |> ignore
                    table.ForeignKey(
                        name = "FK_Categories_Recipes_RecipeId"
                        ,column = (fun x -> (x.RecipeId) :> obj)
                        ,principalTable = "Recipes"
                        ,principalColumn = "Id"
                        ) |> ignore

                )
        ) |> ignore

        migrationBuilder.CreateTable(
            name = "Ingredients"
            ,columns = (fun table -> 
            {|
                Id =
                    table.Column<Guid>(
                        nullable = false
                        ,``type`` = "TEXT"
                    )
                RecipeId =
                    table.Column<Guid>(
                        nullable = false
                        ,``type`` = "TEXT"
                    )
                Text =
                    table.Column<string>(
                        nullable = false
                        ,``type`` = "TEXT"
                    )
                Type =
                    table.Column<string>(
                        nullable = false
                        ,``type`` = "TEXT"
                    )
            |})
            , constraints =
                (fun table -> 
                    table.PrimaryKey("PK_Ingredients", (fun x -> (x.Id) :> obj)
                    ) |> ignore
                    table.ForeignKey(
                        name = "FK_Ingredients_Recipes_RecipeId"
                        ,column = (fun x -> (x.RecipeId) :> obj)
                        ,principalTable = "Recipes"
                        ,principalColumn = "Id"
                        ,onDelete = ReferentialAction.Cascade
                        ) |> ignore

                )
        ) |> ignore

        migrationBuilder.CreateTable(
            name = "Steps"
            ,columns = (fun table -> 
            {|
                Id =
                    table.Column<Guid>(
                        nullable = false
                        ,``type`` = "TEXT"
                    )
                RecipeId =
                    table.Column<Guid>(
                        nullable = false
                        ,``type`` = "TEXT"
                    )
                Order =
                    table.Column<int>(
                        nullable = false
                        ,``type`` = "INTEGER"
                    )
                Text =
                    table.Column<string>(
                        nullable = false
                        ,``type`` = "TEXT"
                    )
            |})
            , constraints =
                (fun table -> 
                    table.PrimaryKey("PK_Steps", (fun x -> (x.Id) :> obj)
                    ) |> ignore
                    table.ForeignKey(
                        name = "FK_Steps_Recipes_RecipeId"
                        ,column = (fun x -> (x.RecipeId) :> obj)
                        ,principalTable = "Recipes"
                        ,principalColumn = "Id"
                        ,onDelete = ReferentialAction.Cascade
                        ) |> ignore

                )
        ) |> ignore

        migrationBuilder.CreateTable(
            name = "Tags"
            ,columns = (fun table -> 
            {|
                Id =
                    table.Column<Guid>(
                        nullable = false
                        ,``type`` = "TEXT"
                    )
                Name =
                    table.Column<string>(
                        nullable = false
                        ,``type`` = "TEXT"
                    )
                RecipeId =
                    table.Column<Guid>(
                        nullable = true
                        ,``type`` = "TEXT"
                    )
            |})
            , constraints =
                (fun table -> 
                    table.PrimaryKey("PK_Tags", (fun x -> (x.Id) :> obj)
                    ) |> ignore
                    table.ForeignKey(
                        name = "FK_Tags_Recipes_RecipeId"
                        ,column = (fun x -> (x.RecipeId) :> obj)
                        ,principalTable = "Recipes"
                        ,principalColumn = "Id"
                        ) |> ignore

                )
        ) |> ignore

        migrationBuilder.CreateIndex(
            name = "IX_Categories_RecipeId"
            ,table = "Categories"
            ,column = "RecipeId"
            ) |> ignore

        migrationBuilder.CreateIndex(
            name = "IX_Ingredients_RecipeId"
            ,table = "Ingredients"
            ,column = "RecipeId"
            ) |> ignore

        migrationBuilder.CreateIndex(
            name = "IX_Steps_RecipeId"
            ,table = "Steps"
            ,column = "RecipeId"
            ) |> ignore

        migrationBuilder.CreateIndex(
            name = "IX_Tags_RecipeId"
            ,table = "Tags"
            ,column = "RecipeId"
            ) |> ignore


    override this.Down(migrationBuilder:MigrationBuilder) =
        migrationBuilder.DropTable(
            name = "Categories"
            ) |> ignore

        migrationBuilder.DropTable(
            name = "Ingredients"
            ) |> ignore

        migrationBuilder.DropTable(
            name = "Steps"
            ) |> ignore

        migrationBuilder.DropTable(
            name = "Tags"
            ) |> ignore

        migrationBuilder.AddColumn<string>(
            name = "Category"
            ,table = "Recipes"
            ,``type`` = "TEXT"
            ,nullable = false
            ,defaultValue = "\"\""
            ) |> ignore


    override this.BuildTargetModel(modelBuilder: ModelBuilder) =
        modelBuilder.HasAnnotation("ProductVersion", "6.0.4") |> ignore

        modelBuilder.Entity("Shared.Category", (fun b ->

            b.Property<Guid>("Id")
                .IsRequired(true)
                .ValueGeneratedOnAdd()
                .HasColumnType("TEXT")
                |> ignore

            b.Property<string>("Name")
                .IsRequired(true)
                .HasColumnType("TEXT")
                |> ignore

            b.Property<Nullable<Guid>>("RecipeId")
                .IsRequired(false)
                .HasColumnType("TEXT")
                |> ignore

            b.HasKey("Id")
                |> ignore


            b.HasIndex("RecipeId")
                |> ignore

            b.ToTable("Categories") |> ignore

        )) |> ignore

        modelBuilder.Entity("Shared.Ingredient", (fun b ->

            b.Property<Guid>("Id")
                .IsRequired(true)
                .ValueGeneratedOnAdd()
                .HasColumnType("TEXT")
                |> ignore

            b.Property<Guid>("RecipeId")
                .IsRequired(true)
                .HasColumnType("TEXT")
                |> ignore

            b.Property<string>("Text")
                .IsRequired(true)
                .HasColumnType("TEXT")
                |> ignore

            b.Property<string>("Type")
                .IsRequired(true)
                .HasColumnType("TEXT")
                |> ignore

            b.HasKey("Id")
                |> ignore


            b.HasIndex("RecipeId")
                |> ignore

            b.ToTable("Ingredients") |> ignore

        )) |> ignore

        modelBuilder.Entity("Shared.Recipe", (fun b ->

            b.Property<Guid>("Id")
                .IsRequired(true)
                .ValueGeneratedOnAdd()
                .HasColumnType("TEXT")
                |> ignore

            b.Property<string>("Description")
                .IsRequired(true)
                .HasColumnType("TEXT")
                |> ignore

            b.Property<string>("Title")
                .IsRequired(true)
                .HasColumnType("TEXT")
                |> ignore

            b.HasKey("Id")
                |> ignore


            b.ToTable("Recipes") |> ignore

        )) |> ignore

        modelBuilder.Entity("Shared.Step", (fun b ->

            b.Property<Guid>("Id")
                .IsRequired(true)
                .ValueGeneratedOnAdd()
                .HasColumnType("TEXT")
                |> ignore

            b.Property<int>("Order")
                .IsRequired(true)
                .HasColumnType("INTEGER")
                |> ignore

            b.Property<Guid>("RecipeId")
                .IsRequired(true)
                .HasColumnType("TEXT")
                |> ignore

            b.Property<string>("Text")
                .IsRequired(true)
                .HasColumnType("TEXT")
                |> ignore

            b.HasKey("Id")
                |> ignore


            b.HasIndex("RecipeId")
                |> ignore

            b.ToTable("Steps") |> ignore

        )) |> ignore

        modelBuilder.Entity("Shared.Tag", (fun b ->

            b.Property<Guid>("Id")
                .IsRequired(true)
                .ValueGeneratedOnAdd()
                .HasColumnType("TEXT")
                |> ignore

            b.Property<string>("Name")
                .IsRequired(true)
                .HasColumnType("TEXT")
                |> ignore

            b.Property<Nullable<Guid>>("RecipeId")
                .IsRequired(false)
                .HasColumnType("TEXT")
                |> ignore

            b.HasKey("Id")
                |> ignore


            b.HasIndex("RecipeId")
                |> ignore

            b.ToTable("Tags") |> ignore

        )) |> ignore

        modelBuilder.Entity("Shared.Todo", (fun b ->

            b.Property<Guid>("Id")
                .IsRequired(true)
                .ValueGeneratedOnAdd()
                .HasColumnType("TEXT")
                |> ignore

            b.Property<string>("Description")
                .IsRequired(true)
                .HasColumnType("TEXT")
                |> ignore

            b.HasKey("Id")
                |> ignore


            b.ToTable("Todos") |> ignore

        )) |> ignore
        modelBuilder.Entity("Shared.Category", (fun b ->
            b.HasOne("Shared.Recipe", null)
                .WithMany("Categories")
                .HasForeignKey("RecipeId")
                |> ignore

        )) |> ignore
        modelBuilder.Entity("Shared.Ingredient", (fun b ->
            b.HasOne("Shared.Recipe", "Recipe")
                .WithMany("Ingredients")
                .HasForeignKey("RecipeId")
                .OnDelete(DeleteBehavior.Cascade)
                .IsRequired()
                |> ignore

        )) |> ignore
        modelBuilder.Entity("Shared.Step", (fun b ->
            b.HasOne("Shared.Recipe", "Recipe")
                .WithMany("Steps")
                .HasForeignKey("RecipeId")
                .OnDelete(DeleteBehavior.Cascade)
                .IsRequired()
                |> ignore

        )) |> ignore
        modelBuilder.Entity("Shared.Tag", (fun b ->
            b.HasOne("Shared.Recipe", null)
                .WithMany("Tags")
                .HasForeignKey("RecipeId")
                |> ignore

        )) |> ignore
        modelBuilder.Entity("Shared.Recipe", (fun b ->

            b.Navigation("Categories")
            |> ignore

            b.Navigation("Ingredients")
            |> ignore

            b.Navigation("Steps")
            |> ignore

            b.Navigation("Tags")
            |> ignore
        )) |> ignore

